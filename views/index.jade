!!!5
html
  head
    title #{title} - My Site
    link(rel='stylesheet', href='/css/bootstrap.min.css')
    link(rel='stylesheet', href='/css/jquery-ui.css')
    link(rel='stylesheet', href='/css/font-awesome.min.css')
    link(rel='stylesheet', href='/css/jquery.gridster.min.css')

    link(rel='stylesheet', href='/css/fixes.css')
    link(rel='stylesheet', href='/css/delineate.css')
    link(rel='stylesheet', href='/css/chartled.css')

    script(type='text/javascript', src='/javascripts/deps/jquery-1.9.1.js')
    script(type='text/javascript', src='/javascripts/deps/jquery-ui.js')
    script(type='text/javascript', src='/javascripts/chartled/deps/d3.v2.min.js')
    script(type='text/javascript', src='/javascripts/chartled/deps/delineate.js')
    script(type='text/javascript', src='/js/bootstrap.min.js')
    script(type='text/javascript', src='/js/bootbox.min.js')
    script(type='text/javascript', src='/javascripts/chartled/builder/chartdFunctions.js')
    script(type='text/javascript', src='/metrics')
    script(type='text/javascript', src='/javascripts/chartled/ChartledDefinition.js')
    script(type='text/javascript', src='/javascripts/chartled/viewer/chartled.js')
    script(type='text/javascript', src='/javascripts/chartled/deps/jquery.gridster.with-extras.min.js')
    script(type='text/javascript', src='/javascripts/chartled/deps/rangy-core.js')
    script(type='text/javascript', src='/javascripts/chartled/deps/hallo.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/BaseChartle.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/text/Renderer.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/text/Editor.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/chart/Renderer.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/chart/Editor.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/clock/Renderer.js')
    script(type='text/javascript', src='/javascripts/chartled/chartles/spacer/Renderer.js')

  body#index
    div.navbar.navbar-inverse.navbar-fixed-top
      div.navbar-inner
        div.container
          a.brand(href="#") Chartled
          ul.btn-group(data-toggle="buttons-radio")
            a#pageModeReadOnly.btn.btn-primary
              i.icon-lock
              |  Read-Only
            a#pageModeLayout.btn.btn-success
              i.icon-move
              |  Layout
            a#pageModeContent.btn.btn-warning
              i.icon-pencil
              |  Content  
          ul.nav
            li.dropdown
              a.dropdown-toggle(href="#",data-toggle="dropdown") Utils
                b.caret
              ul.dropdown-menu
                li
                  a(href='#', onclick="importChartles()") Import
                li
                  a(href='#', onclick="exportChartles()") Export
            li.dropdown
              a.dropdown-toggle(href="#",data-toggle="dropdown") Chartles
                b.caret
              ul.dropdown-menu
                li
                  a(href='#', onclick="addNewChart([]);configureChart('chart'+chartCounter);") Create new Chart
                li
                  a(href='#', onclick="addNewClock();") Create new Clock
                li
                  a(href='#', onclick="addNewTextBox()") Create new Textbox
                li
                  a(href='#', onclick="addNewSpacer()") Create new Spacer
                li.divider
                li
                  a(href='#', onclick='addChart(0)') Cache Hit Rate
                li
                  a(href='#', onclick='addChart(1)') Network Traffic
                li
                  a(href='#', onclick='addChart(2)') CPU
    div#contents.container
      span From  &nbsp;
      input#from(value='now - 30 minutes')
      span   &nbsp;To &nbsp;
      input#to(value='now')
      div.container.gridster

  script(type='text/javascript')
    var page_mode= "readOnly"; // readOnly, layout, content

    $(function() {
      addNewChart( [{ renderer:'line', value:'sin("Foo")' }] );
      addNewChart( [{ renderer:'line', value:'sin("Bar",4)' }] );
      addNewChart( [{ renderer:'line', value:'stats.statsd.ceres.flushTime' }] );

      // Start in read-only mode
      $("#pageModeReadOnly").button('toggle')
      setPageModeReadOnly();

      $("#pageModeReadOnly").on("click", setPageModeReadOnly)
      $("#pageModeLayout").on("click", setPageModeLayout)
      $("#pageModeContent").on("click", setPageModeContent)
    });

    function updatePageCss() {
      $("body").removeClass("pageMode-readonly");
      $("body").removeClass("pageMode-layout");
      $("body").removeClass("pageMode-content");
      $("body").addClass("pageMode-" + page_mode);
    }

    function setPageModeReadOnly() {
      page_mode= "readonly";
      layout.disable();
      layout.disable_resize();
      $( ".textbox" ).hallo({editable: false});
      updatePageCss();
    }

    function setPageModeLayout() {
      page_mode= "layout";
      layout.enable();
      layout.enable_resize();
      $( ".textbox" ).hallo({editable: false});
      updatePageCss();
    }

    function setPageModeContent() {
        page_mode= "content";
        layout.disable();
        layout.disable_resize();
        $( ".textbox" ).hallo({editable: true});
        updatePageCss();
    }

    var offThePegCharts= [
      [{value:'alias(asPercent(stats_counts.cache.hit,sum(stats_counts.cache.{hit,miss})), "Cache Hit %age")',renderer:'area'}],
      [{value:'alias(scale(sum(stats.*.network_interface.*.bytes_total_sec),1000000),"Network Traffic B/s")', renderer:'line'}],
      [{value:'alias(scale(sum(stats_counts.*.processor.*.pct_user_time),100000),"CPU %age Used (User)")',renderer:'area'}]
    ];

      function addChart(chartIndex) {
        addNewChart( offThePegCharts[chartIndex] );
      }
